{"version":3,"sources":["index.js"],"names":["InputList","this","props","numbers","map","number","key","id","value","onClick","e","handleMinus","type","newElem","onChange","handleChange","handlePlus","listItems","addElem","React","Component","OutputList","InterSectionMain","state","firstArray","secondArray","newElemFirst","newElemSecond","array","event","maxIndex","length","setState","parseInt","target","undefined","new_numbers","slice","filter","className","InterSection","left","right","res","i","j","find","item","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9eeb8f5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nclass InputList extends React.Component {\r\n\t  \r\n  listItems() {\r\n    return (\r\n      this.props.numbers.map((number) =>\r\n        <li key={number.id}>\r\n\t\t  <label>\r\n            {number.value}\r\n\t\t  </label> \r\n\t\t  <button \r\n\t\t    key={number.id} \r\n\t\t\tvalue={number.value} \r\n\t\t\tonClick={(e) => this.props.handleMinus(number.id, e)}\r\n\t\t  >\r\n\t\t    -\r\n\t\t  </button>\r\n        </li>\r\n      )\r\n\t);\r\n  }\r\n  \r\n  addElem() {\r\n    return (\r\n      <li key=\"add\">\r\n\t\t<label>\r\n          <input \r\n\t\t    type=\"number\" \r\n\t\t\tvalue={this.props.newElem.value} \r\n\t\t\tonChange={this.props.handleChange} \r\n\t\t  />\r\n        </label>\r\n        <button onClick={this.props.handlePlus}>\r\n\t\t  +\r\n\t\t</button>\r\n      </li>\r\n\t);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <ul>\r\n\t    {this.listItems()}\r\n\t    {this.addElem()}\r\n\t  </ul>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass OutputList extends React.Component {\r\n\t  \r\n  listItems() {\r\n    return (\r\n      this.props.numbers.map((number) =>\r\n        <li key={number.id}>\r\n\t\t  <label>\r\n            {number.value}\r\n\t\t  </label>\t\t\r\n        </li>\r\n      )\r\n\t);\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <ul>\r\n\t    {this.listItems()}\r\n\t  </ul>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass InterSectionMain extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstArray: this.props.firstArray,\r\n      secondArray: this.props.secondArray,\r\n\t  newElemFirst: {value:''},\r\n\t  newElemSecond: {value:''},\r\n    };\r\n  }\t\r\n\t\r\n  handleChange(array, event) {\r\n\tif (array !== 'first' && array !== 'second') {\r\n      return;\r\n\t}\t\r\n\t\r\n\tif (array === 'first') {\r\n\t  const maxIndex = this.state.firstArray[this.state.firstArray.length-1].id;\t\r\n\t  this.setState(\r\n\t    { newElemFirst: \r\n\t      {id:maxIndex + 1,value: parseInt(event.target.value)},\r\n\t    }\r\n\t  );\r\n\t}\r\n\t\r\n\tif (array === 'second') {\r\n\t  const maxIndex = this.state.secondArray[this.state.secondArray.length-1].id;\t\r\n\t  this.setState(\r\n\t    { newElemSecond: \r\n\t      {id:maxIndex + 1,value: parseInt(event.target.value)},\r\n\t    }\r\n\t  );\r\n\t}\r\n  }\r\n\r\n  handlePlus(array, event) {\r\n\tif (array !== 'first' && array !== 'second') {\r\n      return;\r\n\t}\t\t\r\n\t\r\n\tif (array === 'first') {\t  \r\n\t  if (this.state.newElemFirst.id === undefined) {\r\n        return;\r\n\t  }\r\n      this.setState({\r\n\t    firstArray : [...this.state.firstArray, this.state.newElemFirst], \r\n\t    newElemFirst: {value:''},\r\n\t  });\r\n\t}\r\n\t\r\n\tif (array === 'second') {\t  \r\n\t  if (this.state.newElemSecond.id === undefined) {\r\n        return;\r\n\t  }\r\n      this.setState({\r\n\t    secondArray : [...this.state.secondArray, this.state.newElemSecond], \r\n\t    newElemSecond: {value:''},\r\n\t  });\r\n\t}\r\n  }\r\n\r\n  handleMinus(array, id, event) {\r\n\tif (array !== 'first' && array !== 'second') {\r\n      return;\r\n\t}\t\t\r\n\t\r\n\tif (array === 'first') {\t  \r\n      const new_numbers = this.state.firstArray.slice(); \r\n      this.setState({\r\n\t    firstArray : new_numbers.filter((number) => { return number.id !== id; }), \r\n\t  });\r\n\t}\r\n\r\n\tif (array === 'second') {\t  \r\n      const new_numbers = this.state.secondArray.slice(); \r\n      this.setState({\r\n\t    secondArray : new_numbers.filter((number) => { return number.id !== id; }), \r\n\t  });\r\n\t}\r\n  }  \r\n    \r\n  render() {\r\n\r\n    return (\r\n\t  <div className=\"intersection\">\t\r\n        <div className=\"input-data\">\r\n\t      <div className=\"array\">\r\n\t\t    <div className=\"title\">Первый массив:</div> \r\n            <InputList \r\n\t\t      numbers={this.state.firstArray} \r\n\t\t\t  newElem={this.state.newElemFirst} \r\n\t\t\t  handleChange={(e) => this.handleChange('first', e )}\r\n\t\t\t  handlePlus={(e) => this.handlePlus('first', e )}\r\n\t\t\t  handleMinus={(id, e) => this.handleMinus('first', id, e )}\r\n\t\t    />\r\n          </div>\r\n\t\t  <div className=\"array\"> \r\n\t\t    <div className=\"title\">Второй массив:</div> \r\n            <InputList \r\n\t\t      numbers={this.state.secondArray} \r\n\t\t\t  newElem={this.state.newElemSecond} \r\n\t\t\t  handleChange={(e) => this.handleChange('second', e )}\r\n\t\t\t  handlePlus={(e) => this.handlePlus('second', e )}\r\n\t\t\t  handleMinus={(id, e) => this.handleMinus('second', id, e )}\t\t\t\r\n\t\t    />\r\n          </div>\r\n\t\t</div>  \r\n\t\t<div className=\"output-data\">  \r\n\t\t  <div className=\"array\"> \r\n\t\t    <div className=\"title\">Пересечение:</div> \r\n            <OutputList \r\n\t\t      numbers={InterSection(this.state.firstArray, this.state.secondArray)} \r\n\t\t    />\r\n          </div>\t\t\r\n        </div>\r\n\t  </div>\r\n\t  \r\n\t  \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst first = [ \r\n\t    {id:0, value:1} ,\r\n\t\t{id:1, value:8} ,\r\n\t\t{id:2, value:3} ,\r\n\t\t{id:3, value:4} ,\r\n\t\t{id:4, value:7} ,\t\t\r\n\t\t];\r\nconst second = [\r\n\t    {id:0, value:2} ,\r\n\t\t{id:1, value:6} ,\r\n\t\t{id:2, value:8} ,\r\n\t\t{id:3, value:3} ,\r\n\t\t{id:4, value:5} ,\t\t\r\n\t\t];\t  \r\n\r\n\r\n\r\n// ========================================\r\n\r\n\r\nReactDOM.render(\r\n  <InterSectionMain firstArray={first} secondArray={second} />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nfunction InterSection(left, right) {\r\n    const res=[];\r\n    for (let i=0; i<left.length;i++) {\r\n        for (let j=0; j<right.length;j++) {\r\n            if (left[i].value === right[j].value) {\r\n\t\t\t\tlet old = res.find(item => item.value === left[i].value);\r\n                if (old === undefined) res.push(left[i]);\r\n                break;\r\n            }    \r\n        }    \r\n    }\r\nreturn res;\r\n}\r\n"],"sourceRoot":""}